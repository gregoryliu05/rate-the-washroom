version: '3.8'

services:
  # PostgreSQL database with PostGIS
  db:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: rate_the_washroom
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Backend API (development)
  api:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/rate_the_washroom
      REDIS_URL: redis://redis:6379
      ENVIRONMENT: development
      DEBUG: "true"
      VIRTUAL_ENV: /opt/venv
      PATH: "/opt/venv/bin:$PATH"
      GOOGLE_APPLICATION_CREDS: "/app/ratethewashroom-a7745-firebase-adminsdk-fbsvc-67f7db3207.json"
    volumes:
      - ./apps/backend:/app
      - uploads_data:/app/uploads
      - /opt/venv  # Preserve virtual environment
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    user: "1000:1000"  # Run as non-root user
    # Removed command - will use CMD from Dockerfile

  # Backend API (production)
  api-prod:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/rate_the_washroom
      REDIS_URL: redis://redis:6379
      ENVIRONMENT: production
      DEBUG: "false"
      VIRTUAL_ENV: /opt/venv
      PATH: "/opt/venv/bin:$PATH"
      GOOGLE_APPLICATION_CREDS: "/app/ratethewashroom-a7745-firebase-adminsdk-fbsvc-67f7db3207.json"
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    user: "1000:1000"  # Run as non-root user
    command: bash -c "python app/db/init_db.py && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    profiles:
      - production

  # Web frontend (development)
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NODE_ENV: development
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    command: npm run dev

  # Web frontend (production)
  web-prod:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      target: runner
    ports:
      - "3001:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8001
      NODE_ENV: production
    depends_on:
      - api-prod
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  uploads_data:
